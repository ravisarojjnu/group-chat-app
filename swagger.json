{
  "swagger": "2.0",
  "info": {
    "title": "Group Chat API",
    "description": "API for managing group chats and messages",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoints for logging in and out"
    },
    {
      "name": "Users",
      "description": "Endpoints for managing users"
    },
    {
      "name": "Groups",
      "description": "Endpoints for managing groups"
    },
    {
      "name": "Messages",
      "description": "Endpoints for managing messages"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs a user in and returns an access token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs a user out and invalidates their access token"
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of all users",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User list fetched",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "operationId": "create_user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user_id needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "User not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        },
        "summary": "Returns information about a specific user"
      },
      "put": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "ID user_id needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "User not found"
          },
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        },
        "summary": "Updates information about a specific user"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "user_id needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "User not found"
          },
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        },
        "summary": "Deletes a specific user"
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Returns a list of all groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "group prefix that need to be considered for search",
            "required": false,
            "type": "string",
            "collectionFormat": "single"
          }
        ],

        "responses": {
          "200": {
            "description": "Group list fetched",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "consumes": [
          "application/json"
        ], 
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Group created"
          },
          "400": {
            "description": "Invalid input"
          }
        },"security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:admin",
              "read:admin"
            ]
          }
        ],

        "summary": "Creates a new group"
      }
    },
    "/groups/{group_id}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Returns information about a specific group"
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Updates information about a specific group"
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Deletes a specific group"
      }
    },
    "/groups/{group_id}/users": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Returns a list of all users in a specific group"
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Adds a user to a specific group"
      }
    },
    "/groups/{group_id}/messages": {
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Returns a list of all messages in a specific group"
      },
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Adds a new message to a specific group"
      }
    }
  },

  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "is_admin": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CreateGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },

    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "group_id": {
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}